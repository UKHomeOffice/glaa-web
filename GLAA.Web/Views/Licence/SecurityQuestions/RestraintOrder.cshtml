@using GLAA.Web.Helpers

@model GLAA.ViewModels.LicenceApplication.RestraintOrderViewModel

@inject ISessionHelper SessionHelper

@{
    ViewBag.Title = "Details of the restraint or confiscation order, or civil recovery";
}

@*@Html.ActionLink("< Back", "Part", "", new { section = ViewContext.RouteData.Values["Section"], id = SessionHelper.GetLoadedPage() }, new { @class = "details-back-button" })*@
@Html.Partial("_BackButton", new ViewDataDictionary(ViewData) { { "section", ViewContext.RouteData.Values["Section"] }, { "submittedPageId", SessionHelper.GetLoadedPage() }, { "isSecurityPart", true } })


@*@Html.ActionLink("< Back", "Back", "LicenceApplicationBase", new { @class = "details-back-button" })*@

@using (Html.BeginForm())
{
    <div class="grid-row">
        <div class="column-two-thirds">
            @Html.Partial("_GdsValidationSummary")
        </div>
        <div class="column-full">
            <h1 class="heading-large">
                @ViewBag.Title
            </h1>
        </div>
        <div class="column-two-thirds">
            @Html.TextAreaFormGroupFor(x => x.Description)
            @Html.DateFormGroupFor(x => x.Date)
        </div>
    </div>
    if (Model.Id != 0)
    {
        <!--TODO Putting the remove first is more consistent with the rest of the application but also makes it the default action for <ENTER> which might be confusing-->
        <p><button type="submit" class="button button-add-another" formaction="@Url.Action("RemoveRestraintOrder", "Licence", Url.ActionContext.RouteData.Values)">Remove</button></p>
    }
    <p><button type="submit" class="button" formaction="@Url.Action("AddRestraintOrder", "Licence")">Save and continue</button></p>
}
